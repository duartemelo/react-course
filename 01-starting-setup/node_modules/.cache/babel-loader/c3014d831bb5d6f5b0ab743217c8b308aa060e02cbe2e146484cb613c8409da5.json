{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub Projects\\\\react-course\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [enteredYear, setEnteredYear] = useState(\"2020\");\n  const onYearChange = year => {\n    setEnteredYear(year);\n    console.log(year);\n  };\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === enteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this); // pode se usar JSX em variaveis!\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expenseFilteredByYear => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expenseFilteredByYear.title,\n      amount: expenseFilteredByYear.amount,\n      date: expenseFilteredByYear.date\n    }, expenseFilteredByYear.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onYearChange: onYearChange,\n        year: enteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"yo4dHCIvb83wsvL1DXZV62WP4K4=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","enteredYear","setEnteredYear","onYearChange","year","console","log","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","expensesContent","length","map","expenseFilteredByYear","title","amount","id"],"sources":["D:/Coding/GitHub Projects/react-course/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nconst Expenses = (props) => {\r\n  const [enteredYear, setEnteredYear] = useState(\"2020\");\r\n\r\n  const onYearChange = (year) => {\r\n    setEnteredYear(year);\r\n    console.log(year);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enteredYear;\r\n  });\r\n\r\n  let expensesContent = <p>No expenses found.</p>; // pode se usar JSX em variaveis!\r\n\r\n  if (filteredExpenses.length > 0){\r\n    expensesContent = filteredExpenses.map((expenseFilteredByYear) => (\r\n      <ExpenseItem\r\n        key={expenseFilteredByYear.id}\r\n        title={expenseFilteredByYear.title}\r\n        amount={expenseFilteredByYear.amount}\r\n        date={expenseFilteredByYear.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter onYearChange={onYearChange} year={enteredYear} />\r\n        \r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAEtD,MAAMQ,YAAY,GAAIC,IAAI,IAAK;IAC7BF,cAAc,CAACE,IAAI,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,gBAAgB,GAAGP,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAAEC,OAAO,IAAK;IAC1D,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,WAAW;EAC9D,CAAC,CAAC;EAEF,IAAIa,eAAe,gBAAG;IAAA,UAAG;EAAkB;IAAA;IAAA;IAAA;EAAA,QAAI,CAAC,CAAC;;EAEjD,IAAIP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAC;IAC9BD,eAAe,GAAGP,gBAAgB,CAACS,GAAG,CAAEC,qBAAqB,iBAC3D,QAAC,WAAW;MAEV,KAAK,EAAEA,qBAAqB,CAACC,KAAM;MACnC,MAAM,EAAED,qBAAqB,CAACE,MAAO;MACrC,IAAI,EAAEF,qBAAqB,CAACN;IAAK,GAH5BM,qBAAqB,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAKhC,CAAC;EACJ;EAEA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,uBACxB,QAAC,cAAc;QAAC,YAAY,EAAEjB,YAAa;QAAC,IAAI,EAAEF;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAE5D;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAjCIF,QAAQ;AAAA,KAARA,QAAQ;AAmCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}